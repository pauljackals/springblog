# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Gradle.gitlab-ci.yml

# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle

image: docker:19.03.12

# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

build_springblog:
  stage: build
  script:
    - apk update && apk add openjdk11
    - cd ./springblog
    - chmod +x ./gradlew
    - ./gradlew --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle

# build_converter:
#   stage: build
#   script:
#     - cd ./converterCSVToXML
#     - gradle --build-cache assemble
#   cache:
#     key: "$CI_COMMIT_REF_NAME"
#     policy: push
#     paths:
#       - build
#       - .gradle

deploy:
  stage: deploy
  script:
    - 'which ssh-agent || ( apk update && apk add openssh-client )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -q -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $DEPLOY_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - cd ./springblog
    - docker build -t springblog_springblog .
    - docker save -o ./springblog_springblog.tar springblog_springblog
    - ssh $DEPLOY_USER@$DEPLOY_HOST "cd ~/springblog && docker-compose down"
    - scp ./springblog_springblog.tar ../.env.sample ../docker-compose.yml $DEPLOY_USER@$DEPLOY_HOST:~/springblog
    - ssh $DEPLOY_USER@$DEPLOY_HOST "cd ~/springblog && docker load -i ./springblog_springblog.tar && docker-compose --profile production -d"
